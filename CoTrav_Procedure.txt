-------------- Correct Working  ------------
---------------- START 1. create_corporate_with_basic_details--------------
DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `create_corporate_with_basic_details`(IN `corporate_name` VARCHAR(100), IN `corporate_code` VARCHAR(50), IN `contact_person_name` VARCHAR(100), IN `contact_person_no` VARCHAR(15), IN `contact_person_email` VARCHAR(100), IN `bill_corporate_name` VARCHAR(100), IN `address_line_1` VARCHAR(100), IN `address_line_2` VARCHAR(100), IN `address_line_3` VARCHAR(100), IN `gst_id` VARCHAR(100), IN `has_billing_spoc_level` TINYINT(4), IN `has_auth_level` TINYINT(4), IN `no_of_auth_level` TINYINT(4), IN `has_assessment_codes` TINYINT(4), IN `is_radio` TINYINT(4), IN `is_local` TINYINT(4), IN `is_outstation` TINYINT(4), IN `is_bus` TINYINT(4), IN `is_train` TINYINT(4), IN `is_hotel` TINYINT(4), IN `is_meal` TINYINT(4), IN `is_flight` TINYINT(4), IN `is_water_bottles` TINYINT(4), IN `is_reverse_logistics` TINYINT(4), IN `is_spoc` TINYINT(4), IN `password` VARCHAR(255), IN `cotrav_agent_id` INT(11))
    NO SQL
BEGIN

DECLARE gen_corporate_id INT DEFAULT 0;
    DECLARE gen_corporate_login_id INT DEFAULT 0;
    DECLARE gen_billing_id INT DEFAULT 0;
    DECLARE gen_spoc_id INT DEFAULT 0;
    DECLARE gen_employee_id INT DEFAULT 0;
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
      ROLLBACK;
    END;
    
    START TRANSACTION;
    
    INSERT INTO corporates(corporate_name, corporate_code, contact_person_name, contact_person_no, contact_person_email, has_auth_level, no_of_auth_level, has_assessment_codes, is_radio, is_local, is_outstation, 		is_bus, is_train, is_hotel, is_meal, is_flight, is_water_bottles, is_reverse_logistics) VALUES(corporate_name, corporate_code, contact_person_name, contact_person_no, contact_person_email, 							has_auth_level, no_of_auth_level, has_assessment_codes, is_radio, is_local, is_outstation, is_bus, is_train, is_hotel, is_meal, is_flight, is_water_bottles, is_reverse_logistics);
    
    SET gen_corporate_id = LAST_INSERT_ID();
    
    INSERT INTO corporate_action_log (corporate_name, corporate_code, contact_person_name, contact_person_no, contact_person_email, has_auth_level, no_of_auth_level, has_assessment_codes, is_radio, is_local, is_outstation, is_bus, is_train, is_hotel, is_meal, is_flight, is_water_bottles, is_reverse_logistics, is_deleted, action_date, corporate_id, cotrav_agent_id, action) select corporate_name, corporate_code, contact_person_name, contact_person_no, contact_person_email, has_auth_level, no_of_auth_level, has_assessment_codes, is_radio, is_local, is_outstation, is_bus, is_train, is_hotel, is_meal, is_flight, is_water_bottles, is_reverse_logistics, is_deleted, NOW(), gen_corporate_id, cotrav_agent_id, 'ADD' from corporates where id = gen_corporate_id ;
    
    INSERT INTO corporate_logins(corporate_id, email, password, name, contact_no) VALUES(gen_corporate_id, contact_person_email, password, name, contact_no);
    
    SET gen_corporate_login_id = LAST_INSERT_ID();
    
    INSERT INTO corporate_logins_action_log(corporate_id, email, password, name, contact_no, action_date, corporate_login_id, cotrav_agent_id, action) SELECT corporate_id, email, password, name, contact_no, NOW(), gen_corporate_login_id, cotrav_agent_id, 'ADD' from corporate_logins where id = gen_corporate_login_id ;
    
    INSERT INTO corporate_billing_entities(corporate_id, entity_name, contact_person_name, contact_person_email, contact_person_no, address_line_1, address_line_2, address_line_3, gst_id) VALUES(gen_corporate_id, bill_corporate_name, contact_person_name, contact_person_email, contact_person_no, address_line_1, address_line_2, address_line_3, gst_id);
    
    SET gen_billing_id = LAST_INSERT_ID();
    
    INSERT INTO corporate_billing_entities_action_log(corporate_id, entity_name, contact_person_name, contact_person_email, contact_person_no, address_line_1, address_line_2, address_line_3, gst_id, action_date, entity_id, cotrav_agent_id, action ) SELECT corporate_id, entity_name, contact_person_name, contact_person_email, contact_person_no, address_line_1, address_line_2, address_line_3, gst_id, NOW(), gen_billing_id, cotrav_agent_id, 'ADD' from corporate_billing_entities where id = gen_billing_id;
    
    IF is_spoc = 1 THEN
    
    INSERT INTO corporate_spocs(corporate_id, user_name, user_contact, email, username, password, is_radio, is_local, is_outstation, is_bus, is_train, is_hotel, is_meal, is_flight) VALUES (gen_corporate_id, contact_person_name, contact_person_no, contact_person_email, contact_person_email, password, is_radio, is_local, is_outstation, is_bus, is_train, is_hotel, is_meal, is_flight);
    
    SET gen_spoc_id = LAST_INSERT_ID();
    
    INSERT INTO corporate_spocs_action_log(corporate_id, user_name, user_contact, email, username, password, is_radio, is_local, is_outstation, is_bus, is_train, is_hotel, is_meal, is_flight, action_date, spoc_id, cotrav_agent_id, action) SELECT corporate_id, user_name, user_contact, email, username, password, is_radio, is_local, is_outstation, is_bus, is_train, is_hotel, is_meal, is_flight, NOW(), gen_spoc_id, cotrav_agent_id, 'ADD' from corporate_spocs WHERE id = gen_spoc_id;
    
    INSERT INTO corporate_employees(spoc_id, employee_name, employee_email, employee_contact) VALUES (gen_spoc_id, contact_person_name, contact_person_email, contact_person_no);
    
    SET gen_employee_id = LAST_INSERT_ID();
    
    INSERT INTO corporate_employees_action_log(spoc_id, employee_name, employee_email, employee_contact, action_date, employee_id, cotrav_agent_id, action) SELECT spoc_id, employee_name, employee_email, employee_contact, NOW(), gen_employee_id, cotrav_agent_id, 'ADD' from corporate_employees WHERE id = gen_employee_id;
    
    END IF;
    
        
    COMMIT;


END$$
DELIMITER ;

-------------END : create_corporate_with_basic_details--------------------

BEGIN
  IF corporate_id = 0 THEN
      SELECT cl.*,c.corporate_name FROM `corporate_logins` cl left join corporates `c` on cl.corporate_id=c.id;
  ELSE 
  	  SELECT cl.*,c.corporate_name FROM `corporate_logins` cl left join corporates `c` on cl.corporate_id=c.id WHERE cl.corporate_id = corporate_id;
  END IF;
END










